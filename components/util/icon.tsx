import * as React from "react";
import { ColorPickerInput } from "../fields/color";
import { IconPickerInput } from "../fields/icon";
import { useTheme } from "../layout";
import * as BoxIcons from "react-icons/bi";

export const IconOptions = {
  Tina: (props) => (
    <svg
      {...props}
      viewBox="0 0 66 80"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <title>Tina</title>
      <path
        d="M39.4615 36.1782C42.763 33.4475 44.2259 17.3098 45.6551 11.5091C47.0843 5.70828 52.995 6.0025 52.995 6.0025C52.995 6.0025 51.4605 8.67299 52.0864 10.6658C52.7123 12.6587 57 14.4401 57 14.4401L56.0752 16.8781C56.0752 16.8781 54.1441 16.631 52.995 18.9297C51.8459 21.2283 53.7336 43.9882 53.7336 43.9882C53.7336 43.9882 46.8271 57.6106 46.8271 63.3621C46.8271 69.1136 49.5495 73.9338 49.5495 73.9338H45.7293C45.7293 73.9338 40.1252 67.2648 38.9759 63.9318C37.8266 60.5988 38.2861 57.2658 38.2861 57.2658C38.2861 57.2658 32.1946 56.921 26.7931 57.2658C21.3915 57.6106 17.7892 62.2539 17.1391 64.8512C16.4889 67.4486 16.2196 73.9338 16.2196 73.9338H13.1991C11.3606 68.2603 9.90043 66.2269 10.6925 63.3621C12.8866 55.4269 12.4557 50.9263 11.9476 48.9217C11.4396 46.9172 8 45.1676 8 45.1676C9.68492 41.7349 11.4048 40.0854 18.8029 39.9133C26.201 39.7413 36.1599 38.9088 39.4615 36.1782Z"
        fill="currentColor"
      />
      <path
        d="M20.25 63.03C20.25 63.03 21.0305 70.2533 25.1773 73.9342H28.7309C25.1773 69.9085 24.7897 59.415 24.7897 59.415C22.9822 60.0035 20.4799 62.1106 20.25 63.03Z"
        fill="currentColor"
      />
    </svg>
  ),
  Strategymap: (props) => (
    <svg
      {...props}
      viewBox="0 0 87 89"
      fill="#7199C7"
      xmlns="http://www.w3.org/2000/svg"
      width="87"
      height="89"
    >
      <path d="M85.4839 19.81L57.8982 1H57.5H56.7868L29.7266 19.3657L2.82859 1.19254C2.64429 1.08738 2.43595 1.03209 2.22398 1.03209C2.012 1.03209 1.80367 1.08738 1.61936 1.19254C1.44144 1.28859 1.29105 1.42892 1.1826 1.60008C1.07415 1.77125 1.01128 1.96751 1 2.17007V68.2125C1.00961 68.3952 1.06121 68.5731 1.15075 68.7325C1.2403 68.8918 1.36536 69.0281 1.51613 69.1307L29.0187 87.7926H29.1515H29.2547H29.5644H29.874H29.9773H30.11L57.2734 69.6343L84.1862 87.7926C84.3762 87.9268 84.6027 87.9992 84.835 88C85.0272 88.0034 85.2163 87.952 85.3806 87.8519C85.5703 87.7548 85.7289 87.606 85.8384 87.4227C85.9479 87.2394 86.0039 87.0289 86 86.8151V20.7875C86.0023 20.5942 85.9562 20.4035 85.866 20.2327C85.7759 20.0619 85.6445 19.9166 85.4839 19.81ZM3.34473 4.39173L28.5468 21.4096V84.6083L3.34473 67.6496V4.39173ZM30.8916 21.4096L56.1084 4.39173V67.6496L30.8916 84.6083V21.4096ZM83.6553 84.6083L58.5121 67.6496V4.39173L83.6553 21.4096V84.6083Z" fill="currentColor" stroke="#009E97" strokeWidth="0.5"/>

    </svg>
  ),
  Codingicon: (props) => (
    <svg
      {...props}
      viewBox="0 0 95 95"
      fill="#009E97"
      xmlns="http://www.w3.org/2000/svg"
      width="95"
      height="95"
    >
      <g clipPath="url(#clip0_34_570)">
        <path d="M93.6975 0H1.30249C0.957045 0 0.625752 0.138916 0.381489 0.386188C0.137226 0.63346 0 0.968833 0 1.31853L0 93.6155C0 93.9652 0.137226 94.3006 0.381489 94.5479C0.625752 94.7952 0.957045 94.9341 1.30249 94.9341H93.6975C94.043 94.9341 94.3743 94.7952 94.6185 94.5479C94.8628 94.3006 95 93.9652 95 93.6155V1.31853C95 0.968833 94.8628 0.63346 94.6185 0.386188C94.3743 0.138916 94.043 0 93.6975 0V0ZM92.4113 2.62058V19.1022H2.58869V2.62058H92.4113ZM2.58869 92.3794V21.7228H92.4113V92.3794H2.58869Z"  fill="currentColor"/>
        <path d="M10.3383 15.2949C11.1833 15.2982 12.0103 15.0473 12.7142 14.574C13.4182 14.1008 13.9675 13.4266 14.2923 12.6368C14.6172 11.8471 14.703 10.9775 14.539 10.1384C14.3749 9.29917 13.9683 8.52824 13.3708 7.92334C12.7732 7.31844 12.0117 6.90684 11.1827 6.74074C10.3537 6.57465 9.49472 6.66155 8.71461 6.99043C7.93451 7.3193 7.26847 7.87533 6.801 8.58797C6.33353 9.30061 6.08568 10.1378 6.0889 10.9932C6.0889 12.1341 6.5366 13.2282 7.33351 14.035C8.13042 14.8417 9.21126 15.2949 10.3383 15.2949ZM10.3383 9.2956C10.6603 9.2956 10.975 9.39226 11.2428 9.57336C11.5105 9.75446 11.7192 10.0119 11.8424 10.313C11.9657 10.6142 11.9979 10.9456 11.9351 11.2653C11.8723 11.585 11.7172 11.8787 11.4895 12.1092C11.2618 12.3397 10.9717 12.4967 10.6559 12.5603C10.3401 12.6238 10.0127 12.5912 9.71521 12.4665C9.41771 12.3417 9.16343 12.1305 8.98453 11.8594C8.80564 11.5884 8.71015 11.2697 8.71015 10.9438C8.71015 10.5066 8.88168 10.0874 9.18701 9.77833C9.49234 9.46924 9.90645 9.2956 10.3383 9.2956Z"  fill="currentColor"/>
        <path d="M21.1654 15.2949C22.0104 15.2982 22.8374 15.0473 23.5414 14.574C24.2453 14.1008 24.7946 13.4266 25.1195 12.6368C25.4443 11.8471 25.5302 10.9775 25.3661 10.1384C25.202 9.29917 24.7955 8.52824 24.1979 7.92334C23.6004 7.31844 22.8388 6.90684 22.0099 6.74074C21.1809 6.57465 20.3219 6.66155 19.5418 6.99043C18.7617 7.3193 18.0956 7.87533 17.6281 8.58797C17.1607 9.30061 16.9128 10.1378 16.916 10.9932C16.916 12.1341 17.3637 13.2282 18.1607 14.035C18.9576 14.8417 20.0384 15.2949 21.1654 15.2949ZM21.1654 9.2956C21.4874 9.2956 21.8022 9.39226 22.0699 9.57336C22.3377 9.75446 22.5464 10.0119 22.6696 10.313C22.7928 10.6142 22.825 10.9456 22.7622 11.2653C22.6994 11.585 22.5443 11.8787 22.3166 12.1092C22.089 12.3397 21.7989 12.4967 21.483 12.5603C21.1672 12.6238 20.8399 12.5912 20.5424 12.4665C20.2449 12.3417 19.9906 12.1305 19.8117 11.8594C19.6328 11.5884 19.5373 11.2697 19.5373 10.9438C19.5373 10.5066 19.7088 10.0874 20.0142 9.77833C20.3195 9.46924 20.7336 9.2956 21.1654 9.2956Z"  fill="currentColor"/>
        <path d="M31.862 15.2949C32.7096 15.3113 33.5429 15.0716 34.2553 14.6064C34.9678 14.1412 35.5272 13.4717 35.8621 12.6833C36.197 11.8949 36.2922 11.0233 36.1356 10.1798C35.979 9.33636 35.5777 8.55927 34.9828 7.94774C34.388 7.33621 33.6267 6.91798 32.796 6.74644C31.9653 6.5749 31.103 6.65783 30.319 6.98464C29.5351 7.31145 28.8652 7.86732 28.3947 8.58129C27.9243 9.29526 27.6747 10.135 27.6778 10.9932C27.6776 12.1227 28.1164 13.207 28.8993 14.0119C29.6821 14.8167 30.7463 15.2776 31.862 15.2949ZM31.862 9.29558C32.184 9.29558 32.4988 9.39224 32.7665 9.57334C33.0343 9.75444 33.2429 10.0119 33.3662 10.313C33.4894 10.6142 33.5216 10.9456 33.4588 11.2653C33.396 11.585 33.2409 11.8787 33.0132 12.1092C32.7855 12.3397 32.4954 12.4966 32.1796 12.5602C31.8638 12.6238 31.5364 12.5912 31.2389 12.4664C30.9414 12.3417 30.6872 12.1304 30.5083 11.8594C30.3294 11.5884 30.2339 11.2697 30.2339 10.9437C30.2339 10.5066 30.4054 10.0874 30.7108 9.77831C31.0161 9.46922 31.4302 9.29558 31.862 9.29558Z"  fill="currentColor"/>
        <path d="M32.9205 40.8909C32.7793 40.7935 32.6202 40.7259 32.4527 40.6922C32.2851 40.6585 32.1126 40.6594 31.9454 40.6948C31.7782 40.7302 31.6198 40.7994 31.4796 40.8982C31.3394 40.997 31.2204 41.1235 31.1296 41.2699L22.8914 53.9773C22.7566 54.1915 22.6851 54.4402 22.6851 54.6942C22.6851 54.9482 22.7566 55.1969 22.8914 55.4112L31.1296 68.135C31.2459 68.3164 31.4051 68.4657 31.5927 68.5693C31.7803 68.6729 31.9904 68.7276 32.2041 68.7283C32.4585 68.7292 32.7075 68.6547 32.9205 68.514C33.0635 68.4206 33.1867 68.2993 33.283 68.1573C33.3794 68.0153 33.4469 67.8553 33.4817 67.6867C33.5166 67.5181 33.518 67.3441 33.4859 67.1749C33.4539 67.0057 33.389 66.8447 33.295 66.7011L25.5289 54.7024L33.295 42.7038C33.389 42.5602 33.4539 42.3991 33.4859 42.23C33.518 42.0608 33.5166 41.8868 33.4817 41.7182C33.4469 41.5496 33.3794 41.3896 33.283 41.2476C33.1867 41.1056 33.0635 40.9843 32.9205 40.8909Z"  fill="currentColor"/>
        <path d="M64.0824 41.204C63.9917 41.0575 63.8726 40.9311 63.7324 40.8323C63.5923 40.7335 63.4338 40.6643 63.2666 40.6289C63.0994 40.5935 62.9269 40.5926 62.7593 40.6263C62.5918 40.66 62.4327 40.7276 62.2915 40.8249C62.0062 41.0166 61.807 41.3144 61.7369 41.6537C61.6668 41.993 61.7315 42.3466 61.9171 42.6379L69.6831 54.6365L61.8682 66.7011C61.7431 66.8998 61.6728 67.1289 61.6648 67.3645C61.6568 67.6001 61.7114 67.8335 61.8227 68.0405C61.9341 68.2475 62.0983 68.4205 62.2981 68.5415C62.498 68.6624 62.7262 68.727 62.959 68.7283C63.1728 68.7276 63.3829 68.6729 63.5705 68.5693C63.7581 68.4657 63.9173 68.3165 64.0336 68.135L72.2718 55.4112C72.4066 55.1969 72.4781 54.9482 72.4781 54.6942C72.4781 54.4402 72.4066 54.1915 72.2718 53.9773L64.0824 41.204Z"  fill="currentColor"/>
        <path d="M56.235 30.1943C55.9173 30.0866 55.5708 30.1071 55.2676 30.2513C54.9644 30.3956 54.7278 30.6526 54.6069 30.9689L38.2119 75.8978C38.1055 76.2194 38.1257 76.5701 38.2682 76.8771C38.4107 77.184 38.6646 77.4236 38.9771 77.5459C39.122 77.5771 39.2717 77.5771 39.4167 77.5459C39.6801 77.5691 39.9442 77.5105 40.174 77.378C40.4037 77.2455 40.5882 77.0454 40.7029 76.8042L56.9839 31.8754C57.1009 31.5517 57.0881 31.1945 56.9481 30.8802C56.8081 30.566 56.5521 30.3198 56.235 30.1943Z"  fill="currentColor"/>
      </g>
      <defs>
        <clipPath id="clip0_34_570">
          <rect width="95" height="95" fill="white"/>
        </clipPath>
      </defs>
    </svg>
  ),
  Giticon: (props) => (
    <svg
      {...props}
      viewBox="0 0 91 94"
      fill="#494949"
      xmlns="http://www.w3.org/2000/svg"
      width="95"
      height="95"
    >
      <path d="M87.3791 77.5846C85.8764 76.0645 83.874 75.1428 81.7442 74.9909V54.9962C81.7399 51.3824 80.3066 47.9176 77.7583 45.3607C75.21 42.8038 71.7544 41.3632 68.1484 41.3545H47.2305V18.7333C48.8578 18.4857 50.3843 17.7897 51.6397 16.7229C52.8951 15.6562 53.8298 14.2607 54.3396 12.6923C54.8494 11.124 54.9141 9.44448 54.5265 7.84139C54.1389 6.23831 53.3142 4.77477 52.1447 3.61419C51.1495 2.6158 49.932 1.86845 48.5924 1.43365C47.2528 0.998852 45.8293 0.889015 44.439 1.11318C43.0487 1.33734 41.7315 1.8891 40.5955 2.72306C39.4596 3.55702 38.5374 4.64935 37.905 5.91019C37.2725 7.17102 36.9478 8.56433 36.9575 9.97549C36.9672 11.3866 37.3111 12.7753 37.9609 14.0273C38.6107 15.2792 39.5479 16.3587 40.6952 17.1768C41.8425 17.995 43.1673 18.5284 44.5605 18.7333V41.3545H19.9898C16.9488 41.3545 14.0322 42.5652 11.8819 44.7202C9.73153 46.8752 8.52348 49.7981 8.52348 52.8457V74.6462C6.55347 74.9478 4.74242 75.9061 3.38279 77.3662C2.02316 78.8264 1.19433 80.7032 1.03014 82.6936C0.86595 84.684 1.37599 86.6718 2.4779 88.3359C3.57981 90 5.20925 91.2433 7.10309 91.8651C8.99692 92.4868 11.0446 92.4507 12.9154 91.7625C14.7862 91.0743 16.371 89.7743 17.4137 88.0723C18.4565 86.3704 18.8964 84.3658 18.6624 82.3825C18.4284 80.3991 17.5341 78.5527 16.124 77.1414C14.791 75.8062 13.0711 74.9271 11.2099 74.6297V52.8293C11.2099 50.4811 12.1396 48.2288 13.7949 46.5669C15.4502 44.9049 17.6958 43.969 20.039 43.9647H44.6097V75.4505C42.4064 75.6833 40.3724 76.7421 38.9155 78.4148C37.4587 80.0875 36.6866 82.2502 36.7542 84.4695C36.8218 86.6887 37.724 88.8002 39.28 90.3807C40.8359 91.9612 42.9306 92.8938 45.1439 92.9915C47.3572 93.0891 49.5255 92.3446 51.214 90.9073C52.9026 89.4699 53.9865 87.446 54.2484 85.2413C54.5103 83.0366 53.9309 80.8142 52.6263 79.0197C51.3217 77.2252 49.3885 75.9913 47.2142 75.5654V43.9647H68.1484C71.0665 43.969 73.8638 45.1327 75.9272 47.2005C77.9906 49.2684 79.1518 52.0718 79.1561 54.9962V75.1879C77.5214 75.5559 76.0236 76.3791 74.8353 77.5627C73.6469 78.7463 72.8163 80.2423 72.4391 81.8782C72.0619 83.5142 72.1535 85.2237 72.7032 86.8098C73.2529 88.3959 74.2385 89.7942 75.5464 90.8436C76.8543 91.893 78.4314 92.5508 80.096 92.7414C81.7606 92.9319 83.4451 92.6474 84.9555 91.9206C86.4658 91.1938 87.7406 90.0543 88.6331 88.6332C89.5255 87.2122 89.9993 85.5674 90 83.8884C90.0034 82.7157 89.7734 81.5542 89.3234 80.4718C88.8733 79.3894 88.2123 78.4078 87.3791 77.5846ZM39.63 9.93435C39.6269 8.68533 39.9942 7.46356 40.6851 6.42407C41.3761 5.38457 42.3596 4.57421 43.5109 4.09582C44.6622 3.61743 45.9293 3.49257 47.1515 3.73709C48.3737 3.9816 49.4958 4.58447 50.3756 5.4692C50.9658 6.05201 51.4337 6.74733 51.7516 7.5142C52.0695 8.28106 52.231 9.10395 52.2266 9.93435C52.1442 11.5527 51.4447 13.0775 50.2726 14.1938C49.1004 15.3101 47.5453 15.9325 45.9283 15.9325C44.3113 15.9325 42.7561 15.3101 41.584 14.1938C40.4119 13.0775 39.7124 11.5527 39.63 9.93435ZM14.3385 78.9964C14.9288 79.5792 15.3967 80.2745 15.7146 81.0414C16.0325 81.8083 16.194 82.6311 16.1895 83.4615C16.1895 84.7115 15.8197 85.9335 15.1267 86.9728C14.4337 88.0122 13.4488 88.8222 12.2964 89.3006C11.1441 89.779 9.87606 89.9041 8.65272 89.6602C7.42939 89.4164 6.30568 88.8145 5.4237 87.9306C4.54172 87.0467 3.94109 85.9205 3.69775 84.6945C3.45441 83.4686 3.5793 82.1978 4.05663 81.0429C4.53395 79.8881 5.34227 78.901 6.37936 78.2065C7.41646 77.5121 8.63575 77.1414 9.88306 77.1414C10.7117 77.137 11.5328 77.2988 12.298 77.6174C13.0632 77.936 13.757 78.4049 14.3385 78.9964ZM51.7679 84.3316C51.7679 85.5823 51.3976 86.8049 50.7039 87.8446C50.0103 88.8843 49.0244 89.6943 47.871 90.1722C46.7177 90.6501 45.4489 90.7743 44.2251 90.5291C43.0013 90.2839 41.8776 89.6803 40.9963 88.7948C40.115 87.9092 39.5156 86.7816 39.2742 85.5545C39.0327 84.3274 39.1599 83.0561 39.6397 81.9016C40.1196 80.747 40.9304 79.7611 41.9697 79.0686C43.0089 78.3761 44.2298 78.0082 45.4778 78.0114C46.3018 77.9984 47.1202 78.1499 47.8851 78.4571C48.6501 78.7643 49.3463 79.2211 49.9333 79.8008C50.5286 80.3927 50.9981 81.0993 51.3134 81.878C51.6287 82.6567 51.7833 83.4913 51.7679 84.3316ZM81.089 90.1921C80.0557 90.1895 79.0389 89.9319 78.1286 89.442C77.2183 88.9521 76.4424 88.245 75.8695 87.3831C75.2966 86.5213 74.9445 85.5313 74.8441 84.5007C74.7437 83.4701 74.8982 82.4305 75.294 81.4739C75.6898 80.5174 76.3146 79.6732 77.1132 79.0162C77.9119 78.3591 78.8597 77.9093 79.873 77.7066C80.8864 77.5039 81.9339 77.5545 82.923 77.8539C83.9122 78.1532 84.8126 78.6922 85.5445 79.4232C86.4193 80.3079 87.0138 81.4319 87.2533 82.6541C87.4928 83.8763 87.3666 85.1422 86.8906 86.2927C86.4145 87.4432 85.6099 88.4272 84.5777 89.1209C83.5455 89.8147 82.3318 90.1874 81.089 90.1921Z" fill="currentColor" stroke="#494949" strokeWidth="0.5"/>
    </svg>
  ),
...BoxIcons,
};

const iconColorClass: {
  [name: string]: { regular: string; circle: string };
} = {
  blue: {
    regular: "text-blue-400",
    circle: "bg-blue-400 dark:bg-blue-500 text-blue-50",
  },
  teal: {
    regular: "text-teal-400",
    circle: "bg-teal-400 dark:bg-teal-500 text-teal-50",
  },
  green: {
    regular: "text-green-400",
    circle: "bg-green-400 dark:bg-green-500 text-green-50",
  },
  red: {
    regular: "text-red-400",
    circle: "bg-red-400 dark:bg-red-500 text-red-50",
  },
  pink: {
    regular: "text-pink-400",
    circle: "bg-pink-400 dark:bg-pink-500 text-pink-50",
  },
  purple: {
    regular: "text-purple-400",
    circle: "bg-purple-400 dark:bg-purple-500 text-purple-50",
  },
  orange: {
    regular: "text-orange-400",
    circle: "bg-orange-400 dark:bg-orange-500 text-orange-50",
  },
  yellow: {
    regular: "text-yellow-400",
    circle: "bg-yellow-400 dark:bg-yellow-500 text-yellow-50",
  },
  white: {
    regular: "text-white opacity-80",
    circle: "bg-white-400 dark:bg-white-500 text-white-50",
  },
};

const iconSizeClass = {
  xs: "w-6 h-6 flex-shrink-0",
  small: "w-8 h-8 flex-shrink-0",
  medium: "w-12 h-12 flex-shrink-0",
  large: "w-14 h-14 flex-shrink-0",
  xl: "w-16 h-16 flex-shrink-0",
  custom: "",
};

export const Icon = ({
  data,
  parentColor = "",
  className = "",
  tinaField = "",
}) => {
  if (IconOptions[data.name] === null || IconOptions[data.name] === undefined) {
    return null;
  }

  const { name, color, size = "medium", style = "regular" } = data;

  const theme = useTheme();

  const IconSVG = IconOptions[name];

  const iconSizeClasses =
    typeof size === "string"
      ? iconSizeClass[size]
      : iconSizeClass[Object.keys(iconSizeClass)[size]];

  const iconColor = color
    ? color === "primary"
      ? theme.color
      : color
    : theme.color;

  if (style == "circle") {
    return (
      <div
        data-tinafield={tinaField}
        className={`relative z-10 inline-flex items-center justify-center flex-shrink-0 ${iconSizeClasses} rounded-full ${iconColorClass[iconColor].circle} ${className}`}
      >
        <IconSVG className="w-2/3 h-2/3" />
      </div>
    );
  } else {
    const iconColorClasses =
      iconColorClass[
        parentColor === "primary" &&
        (iconColor === theme.color || iconColor === "primary")
          ? "white"
          : iconColor
      ].regular;
    return (
      <IconSVG
        data-tinafield={tinaField}
        className={`${iconSizeClasses} ${iconColorClasses} ${className}`}
      />
    );
  }
};

export const iconSchema = {
  type: "object",
  label: "Icon",
  name: "icon",
  fields: [
    {
      type: "string",
      label: "Icon",
      name: "name",
      ui: {
        component: IconPickerInput,
      },
    },
    {
      type: "string",
      label: "Color",
      name: "color",
      ui: {
        component: ColorPickerInput,
      },
    },
    {
      name: "style",
      label: "Style",
      type: "string",
      options: [
        {
          label: "Circle",
          value: "circle",
        },
        {
          label: "Float",
          value: "float",
        },
      ],
    },
  ],
};
